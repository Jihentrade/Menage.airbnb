{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jihen\\\\OneDrive\\\\Bureau\\\\MenageAirbnb\\\\src\\\\pages\\\\QuoteForm.js\",\n  _s = $RefreshSig$();\n// import React, { useState } from \"react\";\n// import { Helmet } from \"react-helmet\";\n// import \"../styles/QuoteForm.css\";\n\n// const steps = [\n//   \"Votre logement\",\n//   \"Vos besoins\",\n//   \"Services choisis\",\n//   \"Vos coordonnées\",\n// ];\n\n// const initialData = {\n//   logement: \"\",\n//   surface: \"\",\n//   pieces: 1,\n//   foyer: \"\",\n//   adultes: 1,\n//   enfants: 0,\n//   animaux: 0,\n//   besoin: \"\",\n//   frequence: \"\",\n//   services: [],\n//   nom: \"\",\n//   prenom: \"\",\n//   email: \"\",\n//   adresse: \"\",\n//   telephone: \"\",\n//   message: \"\",\n// };\n\n// const allServices = [\n//   \"Ménage à domicile\",\n//   \"Repassage à domicile\",\n//   \"Vitres\",\n//   \"Grand nettoyage\",\n//   \"État des lieux\",\n//   \"Emménagement\",\n//   \"Déménagement\",\n//   \"Remise en ordre\",\n//   \"Aide et maintien à domicile\",\n//   \"Autres\",\n// ];\n\n// export default function QuoteForm() {\n//   const [step, setStep] = useState(0);\n//   const [form, setForm] = useState(initialData);\n//   const [submitted, setSubmitted] = useState(false);\n\n//   const handleChange = (e) => {\n//     const { name, value, type } = e.target;\n//     setForm((f) => ({\n//       ...f,\n//       [name]: type === \"number\" ? Number(value) : value,\n//     }));\n//   };\n\n//   const handleServiceChange = (service) => {\n//     setForm((f) => ({\n//       ...f,\n//       services: f.services.includes(service)\n//         ? f.services.filter((s) => s !== service)\n//         : [...f.services, service],\n//     }));\n//   };\n\n//   const next = () => setStep((s) => Math.min(s + 1, steps.length - 1));\n//   const prev = () => setStep((s) => Math.max(s - 1, 0));\n\n//   const handleSubmit = (e) => {\n//     e.preventDefault();\n//     setSubmitted(true);\n//     // Ici, vous pouvez envoyer les données à votre backend ou service email\n//   };\n\n//   return (\n//     <div className=\"quoteform-container\">\n//       <Helmet>\n//         <title>Devis en ligne - Ménage à Nice</title>\n//         <meta\n//           name=\"description\"\n//           content=\"Demandez un devis gratuit pour un service de ménage à Nice. Réponse rapide, équipe professionnelle, prestations sur-mesure.\"\n//         />\n//       </Helmet>\n//       <h1>Demandez votre devis en ligne</h1>\n//       <div className=\"steps-bar\">\n//         {steps.map((s, i) => (\n//           <div key={i} className={`step${i === step ? \" active\" : \"\"}`}>\n//             {i + 1}\n//           </div>\n//         ))}\n//       </div>\n//       <form className=\"quoteform\" onSubmit={handleSubmit} autoComplete=\"off\">\n//         {step === 0 && (\n//           <div className=\"step-content\">\n//             <h2>Votre logement</h2>\n//             <label>Type de logement *</label>\n//             <select\n//               name=\"logement\"\n//               value={form.logement}\n//               onChange={handleChange}\n//               required\n//             >\n//               <option value=\"\">Choisissez...</option>\n//               <option>Appartement</option>\n//               <option>Maison</option>\n//               <option>Grande demeure</option>\n//               <option>Résidence secondaire</option>\n//               <option>Professionnel</option>\n//             </select>\n//             <label>Surface *</label>\n//             <select\n//               name=\"surface\"\n//               value={form.surface}\n//               onChange={handleChange}\n//               required\n//             >\n//               <option value=\"\">Choisissez...</option>\n//               <option>Moins de 50m²</option>\n//               <option>51m² à 100m²</option>\n//               <option>101m² à 150m²</option>\n//               <option>Plus de 150m²</option>\n//             </select>\n//             <label>Nombre de pièces *</label>\n//             <input\n//               type=\"number\"\n//               name=\"pieces\"\n//               min=\"1\"\n//               max=\"20\"\n//               value={form.pieces}\n//               onChange={handleChange}\n//               required\n//             />\n//             <label>Composition du foyer *</label>\n//             <select\n//               name=\"foyer\"\n//               value={form.foyer}\n//               onChange={handleChange}\n//               required\n//             >\n//               <option value=\"\">Choisissez...</option>\n//               <option>Seul</option>\n//               <option>En colocation</option>\n//               <option>En couple</option>\n//               <option>En famille</option>\n//             </select>\n//             <div className=\"foyer-details\">\n//               <label>Adultes</label>\n//               <input\n//                 type=\"number\"\n//                 name=\"adultes\"\n//                 min=\"1\"\n//                 max=\"10\"\n//                 value={form.adultes}\n//                 onChange={handleChange}\n//               />\n//               <label>Enfants</label>\n//               <input\n//                 type=\"number\"\n//                 name=\"enfants\"\n//                 min=\"0\"\n//                 max=\"10\"\n//                 value={form.enfants}\n//                 onChange={handleChange}\n//               />\n//               <label>Animaux</label>\n//               <input\n//                 type=\"number\"\n//                 name=\"animaux\"\n//                 min=\"0\"\n//                 max=\"10\"\n//                 value={form.animaux}\n//                 onChange={handleChange}\n//               />\n//             </div>\n//           </div>\n//         )}\n//         {step === 1 && (\n//           <div className=\"step-content\">\n//             <h2>Vos besoins</h2>\n//             <label>Fréquence *</label>\n//             <select\n//               name=\"frequence\"\n//               value={form.frequence}\n//               onChange={handleChange}\n//               required\n//             >\n//               <option value=\"\">Choisissez...</option>\n//               <option>Occasionnelle (grand nettoyage, emménagement...)</option>\n//               <option>Régulière (ménage, repassage, vitres...)</option>\n//             </select>\n//             <label>Précisez votre besoin</label>\n//             <textarea\n//               name=\"besoin\"\n//               value={form.besoin}\n//               onChange={handleChange}\n//               placeholder=\"Décrivez votre besoin...\"\n//               rows={3}\n//             />\n//           </div>\n//         )}\n//         {step === 2 && (\n//           <div className=\"step-content\">\n//             <h2>Services choisis</h2>\n//             <div className=\"services-checkboxes\">\n//               {allServices.map((service) => (\n//                 <label key={service} className=\"service-checkbox\">\n//                   <input\n//                     type=\"checkbox\"\n//                     checked={form.services.includes(service)}\n//                     onChange={() => handleServiceChange(service)}\n//                   />\n//                   {service}\n//                 </label>\n//               ))}\n//             </div>\n//           </div>\n//         )}\n//         {step === 3 && (\n//           <div className=\"step-content\">\n//             <h2>Vos coordonnées</h2>\n//             <label>Nom *</label>\n//             <input\n//               name=\"nom\"\n//               value={form.nom}\n//               onChange={handleChange}\n//               required\n//             />\n//             <label>Prénom *</label>\n//             <input\n//               name=\"prenom\"\n//               value={form.prenom}\n//               onChange={handleChange}\n//               required\n//             />\n//             <label>Email *</label>\n//             <input\n//               type=\"email\"\n//               name=\"email\"\n//               value={form.email}\n//               onChange={handleChange}\n//               required\n//             />\n//             <label>Adresse, ville ou code postal *</label>\n//             <input\n//               name=\"adresse\"\n//               value={form.adresse}\n//               onChange={handleChange}\n//               required\n//             />\n//             <label>Téléphone *</label>\n//             <input\n//               name=\"telephone\"\n//               value={form.telephone}\n//               onChange={handleChange}\n//               required\n//             />\n//             <label>Message (facultatif)</label>\n//             <textarea\n//               name=\"message\"\n//               value={form.message}\n//               onChange={handleChange}\n//               rows={2}\n//             />\n//           </div>\n//         )}\n//         <div className=\"form-nav\">\n//           {step > 0 && (\n//             <button type=\"button\" onClick={prev}>\n//               Précédent\n//             </button>\n//           )}\n//           {step < steps.length - 1 && (\n//             <button type=\"button\" onClick={next}>\n//               Suivant\n//             </button>\n//           )}\n//           {step === steps.length - 1 && <button type=\"submit\">Envoyer</button>}\n//         </div>\n//         {submitted && (\n//           <div className=\"form-success\">\n//             Merci, votre demande a bien été envoyée ! Nous vous contacterons\n//             rapidement.\n//           </div>\n//         )}\n//       </form>\n//     </div>\n//   );\n// }\n\nimport React, { useState } from 'react';\nimport { Helmet } from 'react-helmet';\nimport { Link } from 'react-router-dom';\nimport logo from '../assets/logo.png';\nimport '../styles/QuoteWizard.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst steps = [{\n  title: \"Parlons de vous\",\n  subtitle: \"Le spécialiste du ménage repassage à domicile\",\n  description: \"Aidez-nous à mieux vous connaître ! Nous trouverons pour vous l'intervenant idéal et les services les plus adaptés à vos besoins !\",\n  fields: [{\n    label: \"Vous avez un besoin pour *\",\n    name: \"besoin_pour\",\n    type: \"radio\",\n    options: [\"Un appartement\", \"Une maison\", \"Une grande demeure\", \"Une résidence secondaire\", \"Ménage pour professionnels\"],\n    required: true\n  }]\n}, {\n  title: \"Vos besoins\",\n  subtitle: \"Précisez la surface et la composition du foyer\",\n  description: \"\",\n  fields: [{\n    label: \"Quelle est sa surface* ?\",\n    name: \"surface\",\n    type: \"select\",\n    options: [\"Moins de 50m²\", \"De 51m² à 100m²\", \"De 101m² à 150m²\", \"Plus de 150m²\"],\n    required: true\n  }, {\n    label: \"Nombre de pièces*\",\n    name: \"pieces\",\n    type: \"number\",\n    min: 1,\n    max: 20,\n    required: true\n  }, {\n    label: \"Vous vivez*\",\n    name: \"foyer\",\n    type: \"select\",\n    options: [\"Seul\", \"En colocation\", \"En couple\", \"En famille\"],\n    required: true\n  }]\n}, {\n  title: \"Services choisis\",\n  subtitle: \"Quels services cherchez-vous ?\",\n  description: \"\",\n  fields: [{\n    label: \"Choisissez un ou plusieurs services*\",\n    name: \"services\",\n    type: \"checkbox\",\n    options: [\"Ménage à domicile\", \"Repassage à domicile\", \"Vitres\", \"Grand nettoyage\", \"État des lieux\", \"Emménagement\", \"Déménagement\", \"Remise en ordre\", \"Aide et maintien à domicile\", \"Autres\"],\n    required: true\n  }]\n}, {\n  title: \"Vos coordonnées\",\n  subtitle: \"Merci d’entrer vos coordonnées afin que nous puissions vous contacter pour établir un devis personnalisé\",\n  description: \"\",\n  fields: [{\n    label: \"Nom*\",\n    name: \"nom\",\n    type: \"text\",\n    required: true\n  }, {\n    label: \"Prénom*\",\n    name: \"prenom\",\n    type: \"text\",\n    required: true\n  }, {\n    label: \"Email*\",\n    name: \"email\",\n    type: \"email\",\n    required: true\n  }, {\n    label: \"Adresse, ville ou code postal*\",\n    name: \"adresse\",\n    type: \"text\",\n    required: true\n  }, {\n    label: \"Téléphone*\",\n    name: \"telephone\",\n    type: \"text\",\n    required: true\n  }, {\n    label: \"Message (facultatif)\",\n    name: \"message\",\n    type: \"textarea\",\n    required: false\n  }]\n}];\nconst initialData = {\n  besoin_pour: \"\",\n  surface: \"\",\n  pieces: 1,\n  foyer: \"\",\n  services: [],\n  nom: \"\",\n  prenom: \"\",\n  email: \"\",\n  adresse: \"\",\n  telephone: \"\",\n  message: \"\"\n};\nexport default function QuoteWizard() {\n  _s();\n  const [step, setStep] = useState(0);\n  const [form, setForm] = useState(initialData);\n  const [submitted, setSubmitted] = useState(false);\n  const handleChange = e => {\n    const {\n      name,\n      value,\n      type,\n      checked\n    } = e.target;\n    if (type === \"checkbox\") {\n      setForm(f => ({\n        ...f,\n        services: checked ? [...f.services, value] : f.services.filter(s => s !== value)\n      }));\n    } else {\n      setForm(f => ({\n        ...f,\n        [name]: value\n      }));\n    }\n  };\n  const next = () => setStep(s => Math.min(s + 1, steps.length - 1));\n  const prev = () => setStep(s => Math.max(s - 1, 0));\n  const handleSubmit = e => {\n    e.preventDefault();\n    setSubmitted(true);\n    // Envoyer les données à votre backend ici\n  };\n  const currentStep = steps[step];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"wizard-container\",\n    children: [/*#__PURE__*/_jsxDEV(Helmet, {\n      children: /*#__PURE__*/_jsxDEV(\"title\", {\n        children: \"Demandez un devis - M\\xE9nage \\xE0 Nice\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 448,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 447,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"wizard-topbar\",\n      children: [/*#__PURE__*/_jsxDEV(Link, {\n        to: \"/\",\n        className: \"back-btn\",\n        children: \"\\u2190 Retour au site\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 451,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: logo,\n        alt: \"Logo\",\n        className: \"wizard-logo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 452,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"wizard-title\",\n        children: \"Demander un devis\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 453,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 450,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"wizard-step-indicator\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: [\"\\xC9tape \", step + 1, \" / \", steps.length]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 456,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"wizard-steps-bar\",\n        children: steps.map((_, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `wizard-step-dot${i === step ? ' active' : ''}`,\n          children: i + 1\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 459,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 457,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 455,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"wizard-form\",\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: currentStep.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 464,\n        columnNumber: 9\n      }, this), currentStep.subtitle && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"wizard-subtitle\",\n        children: currentStep.subtitle\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 465,\n        columnNumber: 34\n      }, this), currentStep.description && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"wizard-desc\",\n        children: currentStep.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 466,\n        columnNumber: 37\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"wizard-fields\",\n        children: currentStep.fields.map(field => {\n          if (field.type === \"radio\") {\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"wizard-field\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: field.label\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 472,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"wizard-radio-group\",\n                children: field.options.map(opt => /*#__PURE__*/_jsxDEV(\"label\", {\n                  className: \"wizard-radio\",\n                  children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"radio\",\n                    name: field.name,\n                    value: opt,\n                    checked: form[field.name] === opt,\n                    onChange: handleChange,\n                    required: field.required\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 476,\n                    columnNumber: 25\n                  }, this), opt]\n                }, opt, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 475,\n                  columnNumber: 23\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 473,\n                columnNumber: 19\n              }, this)]\n            }, field.name, true, {\n              fileName: _jsxFileName,\n              lineNumber: 471,\n              columnNumber: 17\n            }, this);\n          }\n          if (field.type === \"select\") {\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"wizard-field\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: field.label\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 494,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                name: field.name,\n                value: form[field.name],\n                onChange: handleChange,\n                required: field.required,\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"\",\n                  children: \"Choisissez...\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 501,\n                  columnNumber: 21\n                }, this), field.options.map(opt => /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: opt,\n                  children: opt\n                }, opt, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 503,\n                  columnNumber: 23\n                }, this))]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 495,\n                columnNumber: 19\n              }, this)]\n            }, field.name, true, {\n              fileName: _jsxFileName,\n              lineNumber: 493,\n              columnNumber: 17\n            }, this);\n          }\n          if (field.type === \"checkbox\") {\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"wizard-field\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: field.label\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 512,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"wizard-checkbox-group\",\n                children: field.options.map(opt => /*#__PURE__*/_jsxDEV(\"label\", {\n                  className: \"wizard-checkbox\",\n                  children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"checkbox\",\n                    name: field.name,\n                    value: opt,\n                    checked: form.services.includes(opt),\n                    onChange: handleChange\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 516,\n                    columnNumber: 25\n                  }, this), opt]\n                }, opt, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 515,\n                  columnNumber: 23\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 513,\n                columnNumber: 19\n              }, this)]\n            }, field.name, true, {\n              fileName: _jsxFileName,\n              lineNumber: 511,\n              columnNumber: 17\n            }, this);\n          }\n          if (field.type === \"textarea\") {\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"wizard-field\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: field.label\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 533,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n                name: field.name,\n                value: form[field.name],\n                onChange: handleChange,\n                rows: 3\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 534,\n                columnNumber: 19\n              }, this)]\n            }, field.name, true, {\n              fileName: _jsxFileName,\n              lineNumber: 532,\n              columnNumber: 17\n            }, this);\n          }\n          // text, email, number\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"wizard-field\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: field.label\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 546,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: field.type,\n              name: field.name,\n              value: form[field.name],\n              onChange: handleChange,\n              required: field.required,\n              min: field.min,\n              max: field.max\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 547,\n              columnNumber: 17\n            }, this)]\n          }, field.name, true, {\n            fileName: _jsxFileName,\n            lineNumber: 545,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 467,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"wizard-nav\",\n        children: [step > 0 && /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: prev,\n          children: \"Pr\\xE9c\\xE9dent\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 561,\n          columnNumber: 24\n        }, this), step < steps.length - 1 && /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: next,\n          children: \"Suivant\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 562,\n          columnNumber: 39\n        }, this), step === steps.length - 1 && /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Envoyer\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 563,\n          columnNumber: 41\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 560,\n        columnNumber: 9\n      }, this), submitted && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"wizard-success\",\n        children: \"Merci, votre demande a bien \\xE9t\\xE9 envoy\\xE9e\\u202F! Nous vous contacterons rapidement.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 565,\n        columnNumber: 23\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 463,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 446,\n    columnNumber: 5\n  }, this);\n}\n_s(QuoteWizard, \"dEDjnleAJ0FIluqsLwBxnZcf2Xs=\");\n_c = QuoteWizard;\nvar _c;\n$RefreshReg$(_c, \"QuoteWizard\");","map":{"version":3,"names":["React","useState","Helmet","Link","logo","jsxDEV","_jsxDEV","steps","title","subtitle","description","fields","label","name","type","options","required","min","max","initialData","besoin_pour","surface","pieces","foyer","services","nom","prenom","email","adresse","telephone","message","QuoteWizard","_s","step","setStep","form","setForm","submitted","setSubmitted","handleChange","e","value","checked","target","f","filter","s","next","Math","length","prev","handleSubmit","preventDefault","currentStep","className","children","fileName","_jsxFileName","lineNumber","columnNumber","to","src","alt","map","_","i","onSubmit","field","opt","onChange","includes","rows","onClick","_c","$RefreshReg$"],"sources":["C:/Users/jihen/OneDrive/Bureau/MenageAirbnb/src/pages/QuoteForm.js"],"sourcesContent":["// import React, { useState } from \"react\";\r\n// import { Helmet } from \"react-helmet\";\r\n// import \"../styles/QuoteForm.css\";\r\n\r\n// const steps = [\r\n//   \"Votre logement\",\r\n//   \"Vos besoins\",\r\n//   \"Services choisis\",\r\n//   \"Vos coordonnées\",\r\n// ];\r\n\r\n// const initialData = {\r\n//   logement: \"\",\r\n//   surface: \"\",\r\n//   pieces: 1,\r\n//   foyer: \"\",\r\n//   adultes: 1,\r\n//   enfants: 0,\r\n//   animaux: 0,\r\n//   besoin: \"\",\r\n//   frequence: \"\",\r\n//   services: [],\r\n//   nom: \"\",\r\n//   prenom: \"\",\r\n//   email: \"\",\r\n//   adresse: \"\",\r\n//   telephone: \"\",\r\n//   message: \"\",\r\n// };\r\n\r\n// const allServices = [\r\n//   \"Ménage à domicile\",\r\n//   \"Repassage à domicile\",\r\n//   \"Vitres\",\r\n//   \"Grand nettoyage\",\r\n//   \"État des lieux\",\r\n//   \"Emménagement\",\r\n//   \"Déménagement\",\r\n//   \"Remise en ordre\",\r\n//   \"Aide et maintien à domicile\",\r\n//   \"Autres\",\r\n// ];\r\n\r\n// export default function QuoteForm() {\r\n//   const [step, setStep] = useState(0);\r\n//   const [form, setForm] = useState(initialData);\r\n//   const [submitted, setSubmitted] = useState(false);\r\n\r\n//   const handleChange = (e) => {\r\n//     const { name, value, type } = e.target;\r\n//     setForm((f) => ({\r\n//       ...f,\r\n//       [name]: type === \"number\" ? Number(value) : value,\r\n//     }));\r\n//   };\r\n\r\n//   const handleServiceChange = (service) => {\r\n//     setForm((f) => ({\r\n//       ...f,\r\n//       services: f.services.includes(service)\r\n//         ? f.services.filter((s) => s !== service)\r\n//         : [...f.services, service],\r\n//     }));\r\n//   };\r\n\r\n//   const next = () => setStep((s) => Math.min(s + 1, steps.length - 1));\r\n//   const prev = () => setStep((s) => Math.max(s - 1, 0));\r\n\r\n//   const handleSubmit = (e) => {\r\n//     e.preventDefault();\r\n//     setSubmitted(true);\r\n//     // Ici, vous pouvez envoyer les données à votre backend ou service email\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"quoteform-container\">\r\n//       <Helmet>\r\n//         <title>Devis en ligne - Ménage à Nice</title>\r\n//         <meta\r\n//           name=\"description\"\r\n//           content=\"Demandez un devis gratuit pour un service de ménage à Nice. Réponse rapide, équipe professionnelle, prestations sur-mesure.\"\r\n//         />\r\n//       </Helmet>\r\n//       <h1>Demandez votre devis en ligne</h1>\r\n//       <div className=\"steps-bar\">\r\n//         {steps.map((s, i) => (\r\n//           <div key={i} className={`step${i === step ? \" active\" : \"\"}`}>\r\n//             {i + 1}\r\n//           </div>\r\n//         ))}\r\n//       </div>\r\n//       <form className=\"quoteform\" onSubmit={handleSubmit} autoComplete=\"off\">\r\n//         {step === 0 && (\r\n//           <div className=\"step-content\">\r\n//             <h2>Votre logement</h2>\r\n//             <label>Type de logement *</label>\r\n//             <select\r\n//               name=\"logement\"\r\n//               value={form.logement}\r\n//               onChange={handleChange}\r\n//               required\r\n//             >\r\n//               <option value=\"\">Choisissez...</option>\r\n//               <option>Appartement</option>\r\n//               <option>Maison</option>\r\n//               <option>Grande demeure</option>\r\n//               <option>Résidence secondaire</option>\r\n//               <option>Professionnel</option>\r\n//             </select>\r\n//             <label>Surface *</label>\r\n//             <select\r\n//               name=\"surface\"\r\n//               value={form.surface}\r\n//               onChange={handleChange}\r\n//               required\r\n//             >\r\n//               <option value=\"\">Choisissez...</option>\r\n//               <option>Moins de 50m²</option>\r\n//               <option>51m² à 100m²</option>\r\n//               <option>101m² à 150m²</option>\r\n//               <option>Plus de 150m²</option>\r\n//             </select>\r\n//             <label>Nombre de pièces *</label>\r\n//             <input\r\n//               type=\"number\"\r\n//               name=\"pieces\"\r\n//               min=\"1\"\r\n//               max=\"20\"\r\n//               value={form.pieces}\r\n//               onChange={handleChange}\r\n//               required\r\n//             />\r\n//             <label>Composition du foyer *</label>\r\n//             <select\r\n//               name=\"foyer\"\r\n//               value={form.foyer}\r\n//               onChange={handleChange}\r\n//               required\r\n//             >\r\n//               <option value=\"\">Choisissez...</option>\r\n//               <option>Seul</option>\r\n//               <option>En colocation</option>\r\n//               <option>En couple</option>\r\n//               <option>En famille</option>\r\n//             </select>\r\n//             <div className=\"foyer-details\">\r\n//               <label>Adultes</label>\r\n//               <input\r\n//                 type=\"number\"\r\n//                 name=\"adultes\"\r\n//                 min=\"1\"\r\n//                 max=\"10\"\r\n//                 value={form.adultes}\r\n//                 onChange={handleChange}\r\n//               />\r\n//               <label>Enfants</label>\r\n//               <input\r\n//                 type=\"number\"\r\n//                 name=\"enfants\"\r\n//                 min=\"0\"\r\n//                 max=\"10\"\r\n//                 value={form.enfants}\r\n//                 onChange={handleChange}\r\n//               />\r\n//               <label>Animaux</label>\r\n//               <input\r\n//                 type=\"number\"\r\n//                 name=\"animaux\"\r\n//                 min=\"0\"\r\n//                 max=\"10\"\r\n//                 value={form.animaux}\r\n//                 onChange={handleChange}\r\n//               />\r\n//             </div>\r\n//           </div>\r\n//         )}\r\n//         {step === 1 && (\r\n//           <div className=\"step-content\">\r\n//             <h2>Vos besoins</h2>\r\n//             <label>Fréquence *</label>\r\n//             <select\r\n//               name=\"frequence\"\r\n//               value={form.frequence}\r\n//               onChange={handleChange}\r\n//               required\r\n//             >\r\n//               <option value=\"\">Choisissez...</option>\r\n//               <option>Occasionnelle (grand nettoyage, emménagement...)</option>\r\n//               <option>Régulière (ménage, repassage, vitres...)</option>\r\n//             </select>\r\n//             <label>Précisez votre besoin</label>\r\n//             <textarea\r\n//               name=\"besoin\"\r\n//               value={form.besoin}\r\n//               onChange={handleChange}\r\n//               placeholder=\"Décrivez votre besoin...\"\r\n//               rows={3}\r\n//             />\r\n//           </div>\r\n//         )}\r\n//         {step === 2 && (\r\n//           <div className=\"step-content\">\r\n//             <h2>Services choisis</h2>\r\n//             <div className=\"services-checkboxes\">\r\n//               {allServices.map((service) => (\r\n//                 <label key={service} className=\"service-checkbox\">\r\n//                   <input\r\n//                     type=\"checkbox\"\r\n//                     checked={form.services.includes(service)}\r\n//                     onChange={() => handleServiceChange(service)}\r\n//                   />\r\n//                   {service}\r\n//                 </label>\r\n//               ))}\r\n//             </div>\r\n//           </div>\r\n//         )}\r\n//         {step === 3 && (\r\n//           <div className=\"step-content\">\r\n//             <h2>Vos coordonnées</h2>\r\n//             <label>Nom *</label>\r\n//             <input\r\n//               name=\"nom\"\r\n//               value={form.nom}\r\n//               onChange={handleChange}\r\n//               required\r\n//             />\r\n//             <label>Prénom *</label>\r\n//             <input\r\n//               name=\"prenom\"\r\n//               value={form.prenom}\r\n//               onChange={handleChange}\r\n//               required\r\n//             />\r\n//             <label>Email *</label>\r\n//             <input\r\n//               type=\"email\"\r\n//               name=\"email\"\r\n//               value={form.email}\r\n//               onChange={handleChange}\r\n//               required\r\n//             />\r\n//             <label>Adresse, ville ou code postal *</label>\r\n//             <input\r\n//               name=\"adresse\"\r\n//               value={form.adresse}\r\n//               onChange={handleChange}\r\n//               required\r\n//             />\r\n//             <label>Téléphone *</label>\r\n//             <input\r\n//               name=\"telephone\"\r\n//               value={form.telephone}\r\n//               onChange={handleChange}\r\n//               required\r\n//             />\r\n//             <label>Message (facultatif)</label>\r\n//             <textarea\r\n//               name=\"message\"\r\n//               value={form.message}\r\n//               onChange={handleChange}\r\n//               rows={2}\r\n//             />\r\n//           </div>\r\n//         )}\r\n//         <div className=\"form-nav\">\r\n//           {step > 0 && (\r\n//             <button type=\"button\" onClick={prev}>\r\n//               Précédent\r\n//             </button>\r\n//           )}\r\n//           {step < steps.length - 1 && (\r\n//             <button type=\"button\" onClick={next}>\r\n//               Suivant\r\n//             </button>\r\n//           )}\r\n//           {step === steps.length - 1 && <button type=\"submit\">Envoyer</button>}\r\n//         </div>\r\n//         {submitted && (\r\n//           <div className=\"form-success\">\r\n//             Merci, votre demande a bien été envoyée ! Nous vous contacterons\r\n//             rapidement.\r\n//           </div>\r\n//         )}\r\n//       </form>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n\r\n\r\n\r\n\r\n\r\nimport React, { useState } from 'react';\r\nimport { Helmet } from 'react-helmet';\r\nimport { Link } from 'react-router-dom';\r\nimport logo from '../assets/logo.png';\r\nimport '../styles/QuoteWizard.css';\r\n\r\nconst steps = [\r\n  {\r\n    title: \"Parlons de vous\",\r\n    subtitle: \"Le spécialiste du ménage repassage à domicile\",\r\n    description: \"Aidez-nous à mieux vous connaître ! Nous trouverons pour vous l'intervenant idéal et les services les plus adaptés à vos besoins !\",\r\n    fields: [\r\n      {\r\n        label: \"Vous avez un besoin pour *\",\r\n        name: \"besoin_pour\",\r\n        type: \"radio\",\r\n        options: [\r\n          \"Un appartement\",\r\n          \"Une maison\",\r\n          \"Une grande demeure\",\r\n          \"Une résidence secondaire\",\r\n          \"Ménage pour professionnels\"\r\n        ],\r\n        required: true\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    title: \"Vos besoins\",\r\n    subtitle: \"Précisez la surface et la composition du foyer\",\r\n    description: \"\",\r\n    fields: [\r\n      {\r\n        label: \"Quelle est sa surface* ?\",\r\n        name: \"surface\",\r\n        type: \"select\",\r\n        options: [\r\n          \"Moins de 50m²\",\r\n          \"De 51m² à 100m²\",\r\n          \"De 101m² à 150m²\",\r\n          \"Plus de 150m²\"\r\n        ],\r\n        required: true\r\n      },\r\n      {\r\n        label: \"Nombre de pièces*\",\r\n        name: \"pieces\",\r\n        type: \"number\",\r\n        min: 1,\r\n        max: 20,\r\n        required: true\r\n      },\r\n      {\r\n        label: \"Vous vivez*\",\r\n        name: \"foyer\",\r\n        type: \"select\",\r\n        options: [\r\n          \"Seul\",\r\n          \"En colocation\",\r\n          \"En couple\",\r\n          \"En famille\"\r\n        ],\r\n        required: true\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    title: \"Services choisis\",\r\n    subtitle: \"Quels services cherchez-vous ?\",\r\n    description: \"\",\r\n    fields: [\r\n      {\r\n        label: \"Choisissez un ou plusieurs services*\",\r\n        name: \"services\",\r\n        type: \"checkbox\",\r\n        options: [\r\n          \"Ménage à domicile\",\r\n          \"Repassage à domicile\",\r\n          \"Vitres\",\r\n          \"Grand nettoyage\",\r\n          \"État des lieux\",\r\n          \"Emménagement\",\r\n          \"Déménagement\",\r\n          \"Remise en ordre\",\r\n          \"Aide et maintien à domicile\",\r\n          \"Autres\"\r\n        ],\r\n        required: true\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    title: \"Vos coordonnées\",\r\n    subtitle: \"Merci d’entrer vos coordonnées afin que nous puissions vous contacter pour établir un devis personnalisé\",\r\n    description: \"\",\r\n    fields: [\r\n      { label: \"Nom*\", name: \"nom\", type: \"text\", required: true },\r\n      { label: \"Prénom*\", name: \"prenom\", type: \"text\", required: true },\r\n      { label: \"Email*\", name: \"email\", type: \"email\", required: true },\r\n      { label: \"Adresse, ville ou code postal*\", name: \"adresse\", type: \"text\", required: true },\r\n      { label: \"Téléphone*\", name: \"telephone\", type: \"text\", required: true },\r\n      { label: \"Message (facultatif)\", name: \"message\", type: \"textarea\", required: false }\r\n    ]\r\n  }\r\n];\r\n\r\nconst initialData = {\r\n  besoin_pour: \"\",\r\n  surface: \"\",\r\n  pieces: 1,\r\n  foyer: \"\",\r\n  services: [],\r\n  nom: \"\",\r\n  prenom: \"\",\r\n  email: \"\",\r\n  adresse: \"\",\r\n  telephone: \"\",\r\n  message: \"\"\r\n};\r\n\r\nexport default function QuoteWizard() {\r\n  const [step, setStep] = useState(0);\r\n  const [form, setForm] = useState(initialData);\r\n  const [submitted, setSubmitted] = useState(false);\r\n\r\n  const handleChange = e => {\r\n    const { name, value, type, checked } = e.target;\r\n    if (type === \"checkbox\") {\r\n      setForm(f => ({\r\n        ...f,\r\n        services: checked\r\n          ? [...f.services, value]\r\n          : f.services.filter(s => s !== value)\r\n      }));\r\n    } else {\r\n      setForm(f => ({ ...f, [name]: value }));\r\n    }\r\n  };\r\n\r\n  const next = () => setStep(s => Math.min(s + 1, steps.length - 1));\r\n  const prev = () => setStep(s => Math.max(s - 1, 0));\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n    setSubmitted(true);\r\n    // Envoyer les données à votre backend ici\r\n  };\r\n\r\n  const currentStep = steps[step];\r\n\r\n  return (\r\n    <div className=\"wizard-container\">\r\n      <Helmet>\r\n        <title>Demandez un devis - Ménage à Nice</title>\r\n      </Helmet>\r\n      <div className=\"wizard-topbar\">\r\n        <Link to=\"/\" className=\"back-btn\">← Retour au site</Link>\r\n        <img src={logo} alt=\"Logo\" className=\"wizard-logo\" />\r\n        <span className=\"wizard-title\">Demander un devis</span>\r\n      </div>\r\n      <div className=\"wizard-step-indicator\">\r\n        <span>Étape {step + 1} / {steps.length}</span>\r\n        <div className=\"wizard-steps-bar\">\r\n          {steps.map((_, i) => (\r\n            <div key={i} className={`wizard-step-dot${i === step ? ' active' : ''}`}>{i + 1}</div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n      <form className=\"wizard-form\" onSubmit={handleSubmit}>\r\n        <h2>{currentStep.title}</h2>\r\n        {currentStep.subtitle && <div className=\"wizard-subtitle\">{currentStep.subtitle}</div>}\r\n        {currentStep.description && <div className=\"wizard-desc\">{currentStep.description}</div>}\r\n        <div className=\"wizard-fields\">\r\n          {currentStep.fields.map(field => {\r\n            if (field.type === \"radio\") {\r\n              return (\r\n                <div key={field.name} className=\"wizard-field\">\r\n                  <label>{field.label}</label>\r\n                  <div className=\"wizard-radio-group\">\r\n                    {field.options.map(opt => (\r\n                      <label key={opt} className=\"wizard-radio\">\r\n                        <input\r\n                          type=\"radio\"\r\n                          name={field.name}\r\n                          value={opt}\r\n                          checked={form[field.name] === opt}\r\n                          onChange={handleChange}\r\n                          required={field.required}\r\n                        />\r\n                        {opt}\r\n                      </label>\r\n                    ))}\r\n                  </div>\r\n                </div>\r\n              );\r\n            }\r\n            if (field.type === \"select\") {\r\n              return (\r\n                <div key={field.name} className=\"wizard-field\">\r\n                  <label>{field.label}</label>\r\n                  <select\r\n                    name={field.name}\r\n                    value={form[field.name]}\r\n                    onChange={handleChange}\r\n                    required={field.required}\r\n                  >\r\n                    <option value=\"\">Choisissez...</option>\r\n                    {field.options.map(opt => (\r\n                      <option key={opt} value={opt}>{opt}</option>\r\n                    ))}\r\n                  </select>\r\n                </div>\r\n              );\r\n            }\r\n            if (field.type === \"checkbox\") {\r\n              return (\r\n                <div key={field.name} className=\"wizard-field\">\r\n                  <label>{field.label}</label>\r\n                  <div className=\"wizard-checkbox-group\">\r\n                    {field.options.map(opt => (\r\n                      <label key={opt} className=\"wizard-checkbox\">\r\n                        <input\r\n                          type=\"checkbox\"\r\n                          name={field.name}\r\n                          value={opt}\r\n                          checked={form.services.includes(opt)}\r\n                          onChange={handleChange}\r\n                        />\r\n                        {opt}\r\n                      </label>\r\n                    ))}\r\n                  </div>\r\n                </div>\r\n              );\r\n            }\r\n            if (field.type === \"textarea\") {\r\n              return (\r\n                <div key={field.name} className=\"wizard-field\">\r\n                  <label>{field.label}</label>\r\n                  <textarea\r\n                    name={field.name}\r\n                    value={form[field.name]}\r\n                    onChange={handleChange}\r\n                    rows={3}\r\n                  />\r\n                </div>\r\n              );\r\n            }\r\n            // text, email, number\r\n            return (\r\n              <div key={field.name} className=\"wizard-field\">\r\n                <label>{field.label}</label>\r\n                <input\r\n                  type={field.type}\r\n                  name={field.name}\r\n                  value={form[field.name]}\r\n                  onChange={handleChange}\r\n                  required={field.required}\r\n                  min={field.min}\r\n                  max={field.max}\r\n                />\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n        <div className=\"wizard-nav\">\r\n          {step > 0 && <button type=\"button\" onClick={prev}>Précédent</button>}\r\n          {step < steps.length - 1 && <button type=\"button\" onClick={next}>Suivant</button>}\r\n          {step === steps.length - 1 && <button type=\"submit\">Envoyer</button>}\r\n        </div>\r\n        {submitted && <div className=\"wizard-success\">Merci, votre demande a bien été envoyée ! Nous vous contacterons rapidement.</div>}\r\n      </form>\r\n    </div>\r\n  );\r\n}"],"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}