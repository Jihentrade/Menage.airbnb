{"ast":null,"code":"// import React, { useState } from \"react\";\n// import { Helmet } from \"react-helmet\";\n// import { Link } from \"react-router-dom\";\n// import logo from \"../assets/logo.png\";\n// import \"../styles/QuoteForm.css\";\n\n// const steps = [\n//   {\n//     title: \"Parlons de vous\",\n//     subtitle: \"Le spécialiste du ménage repassage à domicile\",\n//     description:\n//       \"Aidez-nous à mieux vous connaître ! Nous trouverons pour vous l'intervenant idéal et les services les plus adaptés à vos besoins !\",\n//     fields: [\n//       {\n//         label: \"Vous avez un besoin pour *\",\n//         name: \"besoin_pour\",\n//         type: \"radio\",\n//         options: [\n//           \"Un appartement\",\n//           \"Une maison\",\n//           \"Une grande demeure\",\n//           \"Une résidence secondaire\",\n//           \"Ménage pour professionnels\",\n//         ],\n//         required: true,\n//       },\n//     ],\n//   },\n//   {\n//     title: \"Vos besoins\",\n//     subtitle: \"Précisez la surface et la composition du foyer\",\n//     description: \"\",\n//     fields: [\n//       {\n//         label: \"Quelle est sa surface* ?\",\n//         name: \"surface\",\n//         type: \"select\",\n//         options: [\n//           \"Moins de 50m²\",\n//           \"De 51m² à 100m²\",\n//           \"De 101m² à 150m²\",\n//           \"Plus de 150m²\",\n//         ],\n//         required: true,\n//       },\n//       {\n//         label: \"Nombre de pièces*\",\n//         name: \"pieces\",\n//         type: \"number\",\n//         min: 1,\n//         max: 20,\n//         required: true,\n//       },\n//       {\n//         label: \"Vous vivez*\",\n//         name: \"foyer\",\n//         type: \"select\",\n//         options: [\"Seul\", \"En colocation\", \"En couple\", \"En famille\"],\n//         required: true,\n//       },\n//     ],\n//   },\n//   {\n//     title: \"Services choisis\",\n//     subtitle: \"Quels services cherchez-vous ?\",\n//     description: \"\",\n//     fields: [\n//       {\n//         label: \"Choisissez un ou plusieurs services*\",\n//         name: \"services\",\n//         type: \"checkbox\",\n//         options: [\n//           \"Ménage à domicile\",\n//           \"Repassage à domicile\",\n//           \"Vitres\",\n//           \"Grand nettoyage\",\n//           \"État des lieux\",\n//           \"Emménagement\",\n//           \"Déménagement\",\n//           \"Remise en ordre\",\n//           \"Aide et maintien à domicile\",\n//           \"Autres\",\n//         ],\n//         required: true,\n//       },\n//     ],\n//   },\n//   {\n//     title: \"Vos coordonnées\",\n//     subtitle:\n//       \"Merci d'entrer vos coordonnées afin que nous puissions vous contacter pour établir un devis personnalisé\",\n//     description: \"\",\n//     fields: [\n//       { label: \"Nom*\", name: \"nom\", type: \"text\", required: true },\n//       { label: \"Prénom*\", name: \"prenom\", type: \"text\", required: true },\n//       { label: \"Email*\", name: \"email\", type: \"email\", required: true },\n//       {\n//         label: \"Adresse, ville ou code postal*\",\n//         name: \"adresse\",\n//         type: \"text\",\n//         required: true,\n//       },\n//       { label: \"Téléphone*\", name: \"telephone\", type: \"text\", required: true },\n//       {\n//         label: \"Message (facultatif)\",\n//         name: \"message\",\n//         type: \"textarea\",\n//         required: false,\n//       },\n//     ],\n//   },\n// ];\n\n// const initialData = {\n//   besoin_pour: \"\",\n//   surface: \"\",\n//   pieces: 1,\n//   foyer: \"\",\n//   services: [],\n//   nom: \"\",\n//   prenom: \"\",\n//   email: \"\",\n//   adresse: \"\",\n//   telephone: \"\",\n//   message: \"\",\n// };\n\n// const besoinsOptions = [\n//   { value: \"Un appartement\", icon: \"fa-building\", label: \"Un appartement\" },\n//   { value: \"Une maison\", icon: \"fa-home\", label: \"Une maison\" },\n//   {\n//     value: \"Une grande demeure\",\n//     icon: \"fa-villa\",\n//     label: \"Une grande demeure\",\n//   },\n//   {\n//     value: \"Une résidence secondaire\",\n//     icon: \"fa-beach-access\",\n//     label: \"Une résidence secondaire\",\n//   },\n//   {\n//     value: \"Ménage pour professionnels\",\n//     icon: \"fa-business-center\",\n//     label: \"Ménage pour professionnels\",\n//   },\n// ];\n\n// export default function QuoteWizard() {\n//   const [step, setStep] = useState(0);\n//   const [form, setForm] = useState(initialData);\n//   const [submitted, setSubmitted] = useState(false);\n\n//   const handleChange = (e) => {\n//     const { name, value, type, checked } = e.target;\n//     if (type === \"checkbox\") {\n//       setForm((f) => ({\n//         ...f,\n//         services: checked\n//           ? [...f.services, value]\n//           : f.services.filter((s) => s !== value),\n//       }));\n//     } else {\n//       setForm((f) => ({ ...f, [name]: value }));\n//     }\n//   };\n\n//   const next = () => setStep((s) => Math.min(s + 1, steps.length - 1));\n//   const prev = () => setStep((s) => Math.max(s - 1, 0));\n\n//   const handleSubmit = (e) => {\n//     e.preventDefault();\n//     setSubmitted(true);\n//     // Envoyer les données à votre backend ici\n//   };\n\n//   const currentStep = steps[step];\n\n//   return (\n//     <div className=\"wizard-container\">\n//       <Helmet>\n//         <title>Demandez un devis - Ménage à Nice</title>\n//       </Helmet>\n//       <div className=\"wizard-topbar\">\n//         <Link to=\"/\" className=\"back-btn\">\n//           ← Retour au site\n//         </Link>\n//         <img src={logo} alt=\"Logo\" className=\"wizard-logo\" />\n//         <span className=\"wizard-title\">Demander un devis</span>\n//       </div>\n//       <div className=\"wizard-step-indicator\">\n//         <span>\n//           Étape {step + 1} / {steps.length}\n//         </span>\n//         <div className=\"wizard-steps-bar\">\n//           {steps.map((_, i) => (\n//             <div\n//               key={i}\n//               className={`wizard-step-dot${i === step ? \" active\" : \"\"}`}\n//             >\n//               {i + 1}\n//             </div>\n//           ))}\n//         </div>\n//       </div>\n//       <form className=\"wizard-form\" onSubmit={handleSubmit}>\n//         <h2>{currentStep.title}</h2>\n//         {currentStep.subtitle && (\n//           <div className=\"wizard-subtitle\">{currentStep.subtitle}</div>\n//         )}\n//         {currentStep.description && (\n//           <div className=\"wizard-desc\">{currentStep.description}</div>\n//         )}\n//         <div className=\"wizard-fields\">\n//           {currentStep.fields.map((field) => {\n//             if (field.type === \"radio\") {\n//               return (\n//                 <div key={field.name} className=\"wizard-field\">\n//                   <label>{field.label}</label>\n//                   <div className=\"wizard-cards\">\n//                     {besoinsOptions.map((opt) => (\n//                       <button\n//                         type=\"button\"\n//                         key={opt.value}\n//                         className={`wizard-card${\n//                           form.besoin_pour === opt.value ? \" selected\" : \"\"\n//                         }`}\n//                         onClick={() =>\n//                           setForm((f) => ({ ...f, besoin_pour: opt.value }))\n//                         }\n//                         style={{\n//                           borderColor:\n//                             form.besoin_pour === opt.value\n//                               ? opt.color\n//                               : \"transparent\",\n//                         }}\n//                       >\n//                         <span\n//                           className=\"material-icons\"\n//                           style={{ color: opt.color, fontSize: 40 }}\n//                         >\n//                           {opt.icon}\n//                         </span>\n//                         <span className=\"wizard-card-label\">{opt.value}</span>\n//                       </button>\n//                     ))}\n//                   </div>\n//                 </div>\n//               );\n//             }\n//             if (field.type === \"select\") {\n//               return (\n//                 <div key={field.name} className=\"wizard-field\">\n//                   <label>{field.label}</label>\n//                   <select\n//                     name={field.name}\n//                     value={form[field.name]}\n//                     onChange={handleChange}\n//                     required={field.required}\n//                   >\n//                     <option value=\"\">Choisissez...</option>\n//                     {field.options.map((opt) => (\n//                       <option key={opt} value={opt}>\n//                         {opt}\n//                       </option>\n//                     ))}\n//                   </select>\n//                 </div>\n//               );\n//             }\n//             if (field.type === \"checkbox\") {\n//               return (\n//                 <div key={field.name} className=\"wizard-field\">\n//                   <label>{field.label}</label>\n//                   <div className=\"wizard-checkbox-group\">\n//                     {field.options.map((opt) => (\n//                       <label key={opt} className=\"wizard-checkbox\">\n//                         <input\n//                           type=\"checkbox\"\n//                           name={field.name}\n//                           value={opt}\n//                           checked={form.services.includes(opt)}\n//                           onChange={handleChange}\n//                         />\n//                         {opt}\n//                       </label>\n//                     ))}\n//                   </div>\n//                 </div>\n//               );\n//             }\n//             if (field.type === \"textarea\") {\n//               return (\n//                 <div key={field.name} className=\"wizard-field\">\n//                   <label>{field.label}</label>\n//                   <textarea\n//                     name={field.name}\n//                     value={form[field.name]}\n//                     onChange={handleChange}\n//                     rows={3}\n//                   />\n//                 </div>\n//               );\n//             }\n//             // text, email, number\n//             return (\n//               <div key={field.name} className=\"wizard-field\">\n//                 <label>{field.label}</label>\n//                 <input\n//                   type={field.type}\n//                   name={field.name}\n//                   value={form[field.name]}\n//                   onChange={handleChange}\n//                   required={field.required}\n//                   min={field.min}\n//                   max={field.max}\n//                 />\n//               </div>\n//             );\n//           })}\n//         </div>\n//         <div className=\"wizard-nav\">\n//           {step > 0 && (\n//             <button type=\"button\" onClick={prev}>\n//               Précédent\n//             </button>\n//           )}\n//           {step < steps.length - 1 && (\n//             <button type=\"button\" onClick={next}>\n//               Suivant\n//             </button>\n//           )}\n//           {step === steps.length - 1 && <button type=\"submit\">Envoyer</button>}\n//         </div>\n//         {submitted && (\n//           <div className=\"wizard-success\">\n//             Merci, votre demande a bien été envoyée ! Nous vous contacterons\n//             rapidement.\n//           </div>\n//         )}\n//       </form>\n//     </div>\n//   );\n// }","map":{"version":3,"names":[],"sources":["C:/Users/jihen/OneDrive/Bureau/MenageAirbnb/src/pages/QuoteForm.js"],"sourcesContent":["// import React, { useState } from \"react\";\r\n// import { Helmet } from \"react-helmet\";\r\n// import { Link } from \"react-router-dom\";\r\n// import logo from \"../assets/logo.png\";\r\n// import \"../styles/QuoteForm.css\";\r\n\r\n// const steps = [\r\n//   {\r\n//     title: \"Parlons de vous\",\r\n//     subtitle: \"Le spécialiste du ménage repassage à domicile\",\r\n//     description:\r\n//       \"Aidez-nous à mieux vous connaître ! Nous trouverons pour vous l'intervenant idéal et les services les plus adaptés à vos besoins !\",\r\n//     fields: [\r\n//       {\r\n//         label: \"Vous avez un besoin pour *\",\r\n//         name: \"besoin_pour\",\r\n//         type: \"radio\",\r\n//         options: [\r\n//           \"Un appartement\",\r\n//           \"Une maison\",\r\n//           \"Une grande demeure\",\r\n//           \"Une résidence secondaire\",\r\n//           \"Ménage pour professionnels\",\r\n//         ],\r\n//         required: true,\r\n//       },\r\n//     ],\r\n//   },\r\n//   {\r\n//     title: \"Vos besoins\",\r\n//     subtitle: \"Précisez la surface et la composition du foyer\",\r\n//     description: \"\",\r\n//     fields: [\r\n//       {\r\n//         label: \"Quelle est sa surface* ?\",\r\n//         name: \"surface\",\r\n//         type: \"select\",\r\n//         options: [\r\n//           \"Moins de 50m²\",\r\n//           \"De 51m² à 100m²\",\r\n//           \"De 101m² à 150m²\",\r\n//           \"Plus de 150m²\",\r\n//         ],\r\n//         required: true,\r\n//       },\r\n//       {\r\n//         label: \"Nombre de pièces*\",\r\n//         name: \"pieces\",\r\n//         type: \"number\",\r\n//         min: 1,\r\n//         max: 20,\r\n//         required: true,\r\n//       },\r\n//       {\r\n//         label: \"Vous vivez*\",\r\n//         name: \"foyer\",\r\n//         type: \"select\",\r\n//         options: [\"Seul\", \"En colocation\", \"En couple\", \"En famille\"],\r\n//         required: true,\r\n//       },\r\n//     ],\r\n//   },\r\n//   {\r\n//     title: \"Services choisis\",\r\n//     subtitle: \"Quels services cherchez-vous ?\",\r\n//     description: \"\",\r\n//     fields: [\r\n//       {\r\n//         label: \"Choisissez un ou plusieurs services*\",\r\n//         name: \"services\",\r\n//         type: \"checkbox\",\r\n//         options: [\r\n//           \"Ménage à domicile\",\r\n//           \"Repassage à domicile\",\r\n//           \"Vitres\",\r\n//           \"Grand nettoyage\",\r\n//           \"État des lieux\",\r\n//           \"Emménagement\",\r\n//           \"Déménagement\",\r\n//           \"Remise en ordre\",\r\n//           \"Aide et maintien à domicile\",\r\n//           \"Autres\",\r\n//         ],\r\n//         required: true,\r\n//       },\r\n//     ],\r\n//   },\r\n//   {\r\n//     title: \"Vos coordonnées\",\r\n//     subtitle:\r\n//       \"Merci d'entrer vos coordonnées afin que nous puissions vous contacter pour établir un devis personnalisé\",\r\n//     description: \"\",\r\n//     fields: [\r\n//       { label: \"Nom*\", name: \"nom\", type: \"text\", required: true },\r\n//       { label: \"Prénom*\", name: \"prenom\", type: \"text\", required: true },\r\n//       { label: \"Email*\", name: \"email\", type: \"email\", required: true },\r\n//       {\r\n//         label: \"Adresse, ville ou code postal*\",\r\n//         name: \"adresse\",\r\n//         type: \"text\",\r\n//         required: true,\r\n//       },\r\n//       { label: \"Téléphone*\", name: \"telephone\", type: \"text\", required: true },\r\n//       {\r\n//         label: \"Message (facultatif)\",\r\n//         name: \"message\",\r\n//         type: \"textarea\",\r\n//         required: false,\r\n//       },\r\n//     ],\r\n//   },\r\n// ];\r\n\r\n// const initialData = {\r\n//   besoin_pour: \"\",\r\n//   surface: \"\",\r\n//   pieces: 1,\r\n//   foyer: \"\",\r\n//   services: [],\r\n//   nom: \"\",\r\n//   prenom: \"\",\r\n//   email: \"\",\r\n//   adresse: \"\",\r\n//   telephone: \"\",\r\n//   message: \"\",\r\n// };\r\n\r\n// const besoinsOptions = [\r\n//   { value: \"Un appartement\", icon: \"fa-building\", label: \"Un appartement\" },\r\n//   { value: \"Une maison\", icon: \"fa-home\", label: \"Une maison\" },\r\n//   {\r\n//     value: \"Une grande demeure\",\r\n//     icon: \"fa-villa\",\r\n//     label: \"Une grande demeure\",\r\n//   },\r\n//   {\r\n//     value: \"Une résidence secondaire\",\r\n//     icon: \"fa-beach-access\",\r\n//     label: \"Une résidence secondaire\",\r\n//   },\r\n//   {\r\n//     value: \"Ménage pour professionnels\",\r\n//     icon: \"fa-business-center\",\r\n//     label: \"Ménage pour professionnels\",\r\n//   },\r\n// ];\r\n\r\n// export default function QuoteWizard() {\r\n//   const [step, setStep] = useState(0);\r\n//   const [form, setForm] = useState(initialData);\r\n//   const [submitted, setSubmitted] = useState(false);\r\n\r\n//   const handleChange = (e) => {\r\n//     const { name, value, type, checked } = e.target;\r\n//     if (type === \"checkbox\") {\r\n//       setForm((f) => ({\r\n//         ...f,\r\n//         services: checked\r\n//           ? [...f.services, value]\r\n//           : f.services.filter((s) => s !== value),\r\n//       }));\r\n//     } else {\r\n//       setForm((f) => ({ ...f, [name]: value }));\r\n//     }\r\n//   };\r\n\r\n//   const next = () => setStep((s) => Math.min(s + 1, steps.length - 1));\r\n//   const prev = () => setStep((s) => Math.max(s - 1, 0));\r\n\r\n//   const handleSubmit = (e) => {\r\n//     e.preventDefault();\r\n//     setSubmitted(true);\r\n//     // Envoyer les données à votre backend ici\r\n//   };\r\n\r\n//   const currentStep = steps[step];\r\n\r\n//   return (\r\n//     <div className=\"wizard-container\">\r\n//       <Helmet>\r\n//         <title>Demandez un devis - Ménage à Nice</title>\r\n//       </Helmet>\r\n//       <div className=\"wizard-topbar\">\r\n//         <Link to=\"/\" className=\"back-btn\">\r\n//           ← Retour au site\r\n//         </Link>\r\n//         <img src={logo} alt=\"Logo\" className=\"wizard-logo\" />\r\n//         <span className=\"wizard-title\">Demander un devis</span>\r\n//       </div>\r\n//       <div className=\"wizard-step-indicator\">\r\n//         <span>\r\n//           Étape {step + 1} / {steps.length}\r\n//         </span>\r\n//         <div className=\"wizard-steps-bar\">\r\n//           {steps.map((_, i) => (\r\n//             <div\r\n//               key={i}\r\n//               className={`wizard-step-dot${i === step ? \" active\" : \"\"}`}\r\n//             >\r\n//               {i + 1}\r\n//             </div>\r\n//           ))}\r\n//         </div>\r\n//       </div>\r\n//       <form className=\"wizard-form\" onSubmit={handleSubmit}>\r\n//         <h2>{currentStep.title}</h2>\r\n//         {currentStep.subtitle && (\r\n//           <div className=\"wizard-subtitle\">{currentStep.subtitle}</div>\r\n//         )}\r\n//         {currentStep.description && (\r\n//           <div className=\"wizard-desc\">{currentStep.description}</div>\r\n//         )}\r\n//         <div className=\"wizard-fields\">\r\n//           {currentStep.fields.map((field) => {\r\n//             if (field.type === \"radio\") {\r\n//               return (\r\n//                 <div key={field.name} className=\"wizard-field\">\r\n//                   <label>{field.label}</label>\r\n//                   <div className=\"wizard-cards\">\r\n//                     {besoinsOptions.map((opt) => (\r\n//                       <button\r\n//                         type=\"button\"\r\n//                         key={opt.value}\r\n//                         className={`wizard-card${\r\n//                           form.besoin_pour === opt.value ? \" selected\" : \"\"\r\n//                         }`}\r\n//                         onClick={() =>\r\n//                           setForm((f) => ({ ...f, besoin_pour: opt.value }))\r\n//                         }\r\n//                         style={{\r\n//                           borderColor:\r\n//                             form.besoin_pour === opt.value\r\n//                               ? opt.color\r\n//                               : \"transparent\",\r\n//                         }}\r\n//                       >\r\n//                         <span\r\n//                           className=\"material-icons\"\r\n//                           style={{ color: opt.color, fontSize: 40 }}\r\n//                         >\r\n//                           {opt.icon}\r\n//                         </span>\r\n//                         <span className=\"wizard-card-label\">{opt.value}</span>\r\n//                       </button>\r\n//                     ))}\r\n//                   </div>\r\n//                 </div>\r\n//               );\r\n//             }\r\n//             if (field.type === \"select\") {\r\n//               return (\r\n//                 <div key={field.name} className=\"wizard-field\">\r\n//                   <label>{field.label}</label>\r\n//                   <select\r\n//                     name={field.name}\r\n//                     value={form[field.name]}\r\n//                     onChange={handleChange}\r\n//                     required={field.required}\r\n//                   >\r\n//                     <option value=\"\">Choisissez...</option>\r\n//                     {field.options.map((opt) => (\r\n//                       <option key={opt} value={opt}>\r\n//                         {opt}\r\n//                       </option>\r\n//                     ))}\r\n//                   </select>\r\n//                 </div>\r\n//               );\r\n//             }\r\n//             if (field.type === \"checkbox\") {\r\n//               return (\r\n//                 <div key={field.name} className=\"wizard-field\">\r\n//                   <label>{field.label}</label>\r\n//                   <div className=\"wizard-checkbox-group\">\r\n//                     {field.options.map((opt) => (\r\n//                       <label key={opt} className=\"wizard-checkbox\">\r\n//                         <input\r\n//                           type=\"checkbox\"\r\n//                           name={field.name}\r\n//                           value={opt}\r\n//                           checked={form.services.includes(opt)}\r\n//                           onChange={handleChange}\r\n//                         />\r\n//                         {opt}\r\n//                       </label>\r\n//                     ))}\r\n//                   </div>\r\n//                 </div>\r\n//               );\r\n//             }\r\n//             if (field.type === \"textarea\") {\r\n//               return (\r\n//                 <div key={field.name} className=\"wizard-field\">\r\n//                   <label>{field.label}</label>\r\n//                   <textarea\r\n//                     name={field.name}\r\n//                     value={form[field.name]}\r\n//                     onChange={handleChange}\r\n//                     rows={3}\r\n//                   />\r\n//                 </div>\r\n//               );\r\n//             }\r\n//             // text, email, number\r\n//             return (\r\n//               <div key={field.name} className=\"wizard-field\">\r\n//                 <label>{field.label}</label>\r\n//                 <input\r\n//                   type={field.type}\r\n//                   name={field.name}\r\n//                   value={form[field.name]}\r\n//                   onChange={handleChange}\r\n//                   required={field.required}\r\n//                   min={field.min}\r\n//                   max={field.max}\r\n//                 />\r\n//               </div>\r\n//             );\r\n//           })}\r\n//         </div>\r\n//         <div className=\"wizard-nav\">\r\n//           {step > 0 && (\r\n//             <button type=\"button\" onClick={prev}>\r\n//               Précédent\r\n//             </button>\r\n//           )}\r\n//           {step < steps.length - 1 && (\r\n//             <button type=\"button\" onClick={next}>\r\n//               Suivant\r\n//             </button>\r\n//           )}\r\n//           {step === steps.length - 1 && <button type=\"submit\">Envoyer</button>}\r\n//         </div>\r\n//         {submitted && (\r\n//           <div className=\"wizard-success\">\r\n//             Merci, votre demande a bien été envoyée ! Nous vous contacterons\r\n//             rapidement.\r\n//           </div>\r\n//         )}\r\n//       </form>\r\n//     </div>\r\n//   );\r\n// }\r\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}